package easeljs;

/**
 * Passed as the parameter to all mouse/pointer/touch related events. For a listing of mouse events and their properties,
 * see the {{#crossLink "DisplayObject"}}{{/crossLink}} and {{#crossLink "Stage"}}{{/crossLink}} event listings.
 */
@:native("createjs.MouseEvent")
extern class MouseEvent extends createjs.Event
{
	/**
	 * The normalized x position on the stage. This will always be within the range 0 to stage width.
	 */
	var stageX : Float;
	/**
	 * The normalized y position on the stage. This will always be within the range 0 to stage height.
	 */
	var stageY : Float;
	/**
	 * The raw x position relative to the stage. Normally this will be the same as the stageX value, unless
	 * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.
	 */
	var rawX : Float;
	/**
	 * The raw y position relative to the stage. Normally this will be the same as the stageY value, unless
	 * stage.mouseMoveOutside is true and the pointer is outside of the stage bounds.
	 */
	var rawY : Float;
	/**
	 * The native MouseEvent generated by the browser. The properties and API for this
	 * event may differ between browsers. This property will be null if the
	 * EaselJS property was not directly generated from a native MouseEvent.
	 */
	var nativeEvent : js.html.MouseEvent;
	/**
	 * The unique id for the pointer (touch point or cursor). This will be either -1 for the mouse, or the system
	 * supplied id value.
	 */
	var pointerID : Float;
	/**
	 * Indicates whether this is the primary pointer in a multitouch environment. This will always be true for the mouse.
	 * For touch pointers, the first pointer in the current stack will be considered the primary pointer.
	 */
	var primary : Bool;
	/**
	 * Returns the x position of the mouse in the local coordinate system of the current target (ie. the dispatcher).
	 */
	var localX : Float;
	/**
	 * Returns the y position of the mouse in the local coordinate system of the current target (ie. the dispatcher).
	 */
	var localY : Float;
	/**
	 * Indicates whether the event was generated by a touch input (versus a mouse input).
	 */
	var isTouch : Bool;

	function new(type:String, bubbles:Bool, cancelable:Bool, stageX:Float, stageY:Float, nativeEvent:easeljs.MouseEvent, pointerID:Float, primary:Bool, rawX:Float, rawY:Float) : Void;

	/**
	 * Returns a clone of the MouseEvent instance.
	 */
	override function clone() : createjs.Event;
	/**
	 * Returns a string representation of this object.
	 */
	override function toString() : String;
}